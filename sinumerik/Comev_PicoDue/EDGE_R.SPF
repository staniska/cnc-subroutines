PROC EDGE_R(REAL X_EDGE, REAL Z_EDGE, REAL RADIUS, REAL _MAX_DEPTH, REAL FINE_FEED, REAL RECURS)

DEF REAL TOOL_ORI

;AXIS start position
DEF REAL X_START
DEF REAL Z_START

;Orientation factors
DEF REAL X_K=1
DEF REAL Z_K=1
DEF INT ITER

IF (_MAX_DEPTH<=0)
  _MAX_DEPTH=1
ENDIF

IF (FINE_FEED<=0)
  FINE_FEED=0.12
ENDIF

IF (RECURS>0)
  FINE_FEED=$P_F
ENDIF



TOOL_ORI=$TC_DP2[$P_TOOLNO,$P_TOOL]

IF ((TOOL_ORI<2) OR (TOOL_ORI>4))
  MSG("Tool orientation "<<TOOL_ORI<<" NOT supported")
  G4 F60
  GOTOF END_EDGE_R
ENDIF

;AXIS start position
X_START=$AA_IW[X]
Z_START=$AA_IW[Z]

;Orientation factors
;DEF REAL X_K=1
;DEF REAL Z_K=1

IF (TOOL_ORI==2)
  X_K=-1
ENDIF
IF (TOOL_ORI==4)
  Z_K=-1
ENDIF

IF (((X_START-X_EDGE)*X_K)<1)
  MSG("Start position X ERROR")
  G4 F60
  GOTOF END_EDGE_R
ENDIF

IF (((Z_START-Z_EDGE)*Z_K)<1)
  MSG("Start position Z ERROR")
  G4 F60
  GOTOF END_EDGE_R
ENDIF


IF ((RADIUS>_MAX_DEPTH) AND (RECURS<=0))
  ITER=1
  OBDIR_CHR:
    ;MSG(""<<ITER)
    EDGE_R(X_EDGE,Z_EDGE,_MAX_DEPTH*ITER,_MAX_DEPTH*ITER,1,1)
    ITER=ITER+1
  IF ITER<=TRUNC((RADIUS-0.01)/_MAX_DEPTH) GOTOB OBDIR_CHR
ENDIF

G0 Z=Z_EDGE+0.5*Z_K X=X_EDGE-2*(RADIUS+$P_TOOLR)*X_K
G1 Z=Z_EDGE FB=FINE_FEED M108
X=X_EDGE RND=(RADIUS+$P_TOOLR) FB=FINE_FEED
Z=IC(-Z_K*(RADIUS+$P_TOOLR)) FB=FINE_FEED
X=IC(X_K) M109
G0 X=X_START Z=Z_START

END_EDGE_R:

M17
